<div class="forum"
  tal:define="
    dummy view/set_content_type_and_nocache;
    message python:view.update() or request.get('message');
    comments context/comments;
    batch python:context.service_views.Silva.getBatch(comments, size=10, orphan=0);
">

<script type="text/javascript">
// <![CDATA[

function getXHR() {
    try{
        return new XMLHttpRequest();
    } catch(e) {
        // not a Mozilla or Konqueror based browser
    };
    try {
        // XXX not sure if it's really better, but perhaps we should use
        // the more verbose way (with version numbers and all) for A-X
        // instantiation?
        return new ActiveXObject('Microsoft.XMLHTTP');
    } catch(e) {
        // not IE either...
    };
    return undefined;
};

function load_async(path, callback, errback) {
    /* load data from a path/url

        on successful load <callback> is called with arguments 'status',
        'content', on error <errback>, with the same arguments
    */
    if (!errback) {
        errback = callback;
    };
    var xhr = getXHR();
    xhr.open('GET', path, true);
    var handler = function() {
        if (xhr.readyState == 4) {
            if (xhr.status != 200 && xhr.status != 302) {
                errback(xhr.status, xhr.responseText);
                return;
            };
            callback(xhr.status, xhr.responseText);
        };
    };
    xhr.onreadystatechange = handler;
    xhr.send('');
};

function add_form(placeholder) {
    var add_form_handler = function(status, responsetext) {
        // XXX hack hack hack... but it's JS anyway :|
        var formhtml = responsetext.substring(responsetext.indexOf('form') - 1, responsetext.lastIndexOf('/form') + 6);
        placeholder.innerHTML = formhtml;
    };
    var add_form_errhandler = function(status, responsetext) {
        alert('error ' + status + ' loading data from url: ' + responsetext);
    };
    var url = placeholder.getAttribute('href') + '/comment_form.html';
    load_async(url, add_form_handler, add_form_errhandler);
};

function del_form(placeholder) {
    while (placeholder.hasChildNodes()) {
        placeholder.removeChild(placeholder.lastChild);
    };
    placeholder.appendChild(document.createTextNode('\xa0'));
};

function toggle_form(evt) {
    var placeholder = document.getElementById('form-placeholder');
    if (placeholder.getElementsByTagName('form').length) {
        del_form(placeholder);
    } else {
        add_form(placeholder);
    };
    if (evt.stopPropagation) {
        evt.stopPropagation();
    } else {
        evt.returnValue = false;
    };
    evt.cancelBubble = true;
    return false;
};
function add_smiley(text_to_add) {
    /* add a smiley to the textarea
    */
    // XXX this is a bit scary... the DOM specs say text nodes can
    // be split up, but afaik that never happens in browsers... if,
    // however, people start reporting missing last bits of text, please
    // fix this code... ;)
    var textarea = document.getElementById('text');
    var content = textarea.value;
    var lastchar = content.charAt(content.length - 1);
    if (lastchar && lastchar != ' ' && lastchar != '\t' && lastchar != '\n'
          && lastchar != '\r') {
        content += ' ';
    };
    content += text_to_add + ' ';
    // XXX please check the argument order here! might be wrong...
    // stupid DOM :(
    textarea.value = content;
    textarea.focus();
};
// ]]>
</script>
<div class="feedback"
  tal:condition="message"
  tal:content="message">
  message
</div>
<table class="pagination"
  cellspacing="0"
  tal:condition="python:len(comments) > 10">
  <tr>
    <td class="previous">
      <tal:block condition="request/previous_batch_url | nothing">
        <a href="previousbatch"
          accesskey="f"
          title="Go to the first result listing: alt-f"
          tal:attributes="href request/previous_batch_url"
          ><img class="control"
            alt="First"
            tal:define="image context/globals/leftdouble.gif"
            tal:attributes="
              src image/absolute_url;
              width image/width;
              height image/height;
          " />&nbsp;
        </a>
      </tal:block>
      <tal:block condition="request/previous_batch_url | nothing">
        <a href="previousbatch"
          accesskey="b"
          title="See the previous result listing: alt-b"
          tal:attributes="href request/previous_batch_url"
          ><img class="control"
            alt="Previous"
            tal:define="image context/globals/left.gif"
            tal:attributes="
              src image/absolute_url;
              width image/width;
              height image/height;
          " />
        <u>B</u>ack
        </a>
      </tal:block>
    </td>
    <td class="info">
      Showing items
      <tal:block replace="batch/start" />
      to
      <tal:block replace="batch/end" />,
      of
      <tal:block replace="python:len(comments)" />
    </td>
    <td class="next">
      <tal:block condition="request/next_batch_url | nothing">
        <a href="nextbatch"
          accesskey="n"
          title="See the next result listing: alt-n"
          tal:attributes="href request/next_batch_url">
          <u>N</u>ext
          <img class="control"
            alt="Next"
            tal:define="image context/globals/right.gif"
            tal:attributes="
              src image/absolute_url;
              width image/width;
              height image/height;
          " />
        </a>
      </tal:block>
      <tal:block condition="request/next_batch_url | nothing">
        <a href="nextbatch" 
          accesskey="l"
          title="Go to the last result listing: alt-l"
          tal:attributes="href request/next_batch_url">&nbsp;<img
            class="control"
            alt="Last"
            tal:define="image context/globals/rightdouble.gif"
            tal:attributes="
              src image/absolute_url;
              width image/width;
              height image/height;
          " />
        </a>
      </tal:block>
    </td>
  </tr>
</table>
<table class="forum-content-table">
  <thead class="thead">
    <tr>
      <th class="align-left">Author</th>
      <th class="align-left">Topic</th>
    </tr>
  </thead>
  <tbody>
    <tr class="topic">
      <td class="author">
        <p tal:content="python:context.sec_get_creator_info().fullname()">
          author
        </p>
      </td>
      <td class="comment">
        <p class="datetime"
          tal:content="python:view.format_datetime(context.get_creation_datetime())">
          datetime
        </p>
        <h4 tal:content="context/get_title">
          subject
        </h4>
        <p tal:content="structure python:view.format_text(context.get_text())">
          comment
        </p>
      </td>
    </tr>
    <tr>
      <th class="align-left">Author</th>
      <th class="align-left">Comment</th>
    </tr>
    <tal:loop repeat="comment batch">
      <tal:def define="iterate repeat/comment/odd">
        <tr tal:attributes="class python: iterate and 'even' or 'odd'">
          <td class="author">
            <p tal:content="comment/creator">
              author
            </p>
          </td>
          <td class="comment">
            <p class="permalink">
              <a tal:attributes="href comment/url">permalink</a>
            </p>
            <p class="datetime"
              tal:content="python:view.format_datetime(comment['creation_datetime'])">
              datetime
            </p>
            <h5 tal:define="subject comment/title"
              tal:condition="subject"
              tal:content="subject">
              topic
            </h5>
            <p tal:content="structure python:view.format_text(comment['text'])">
              comment
            </p>
          </td>
        </tr>
      </tal:def>
    </tal:loop>
    <tal:preview condition="python:request.get('preview') and (request.get('title') or request.get('text'))">
      <tr class="preview">
        <td class="author">
          <p>Preview</p>
        </td>
        <td class="comment">
          <h5 tal:define="subject request/title"
            tal:condition="subject"
            tal:content="subject">
            subject
          </h5>
          <p tal:content="structure python:view.format_text(request['text'])">
            comment
          </p>
        </td>
      </tr>
    </tal:preview>
  </tbody>
</table>
<a tal:attributes="href string:${context/absolute_url}/comment_form.html" onclick="return toggle_form(event);">post a comment</a>
<div id="form-placeholder" tal:attributes="href context/absolute_url">&#xa0;</div>
<!--<form id="forum-comment-form"
  method="post"
  tal:attributes="action context/absolute_url">
  <h3>Post a new comment</h3>
  <h5>Subject</h5>
  <input class="store"
    type="text"
    name="title"
    size="80"
    tal:attributes="value request/title | nothing"
  />
  <h5>Messsage</h5>
  <textarea class="store"
    name="text"
    id="text"
    rows="10"
    cols="68"
    tal:content="python:request.get('text')"></textarea>
  <div id="emoticons">
    <div class="emoticon"
      tal:repeat="smileydata view/get_smiley_data">
      <img onclick="add_smiley(this.title)"
        alt="emoticon"
        tal:attributes="title smileydata/text; src smileydata/href"
      />
    </div>
  </div>
  <div class="submit">
    <input style="float:right"
      type="submit"
      name="submit"
      value="add comment"
    />
    <input type="submit"
      name="preview"
      value="preview"
    />
  </div>
</form>-->
<!--
<script type="text/javascript">
  // <![CDATA[

  function _(id) {
    return document.getElementById(id);
  };

  var alink = document.createElement('a');
  var form = _('forum-thread-form');
  alink.href = '#';
  alink.onclick = function(evt) {
    if (form.style.display == 'none') {
      form.style.display = 'block';
      this.replaceChild(document.createTextNode('hide form'), this.firstChild);
    } else {
      form.style.display = 'none';
      this.replaceChild(document.createTextNode('new topic'), this.firstChild);
    };
    if (evt.preventDefault) {
      evt.preventDefault();
    } else {
      evt.returnValue = false;
    };
    evt.cancelBubble = true;
  };
  alink.appendChild(document.createTextNode('new topic'));
  form.parentNode.insertBefore(alink, form);
  form.style.display = 'none';

  // ]]>
</script>
-->
</div>
